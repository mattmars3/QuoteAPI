    // adds a field to the FileManager
    appendQuote(quoteObject) {
        console.log("Beginning of appendQuote method")
        if (this.fullQuoteMap == undefined) {this.fullQuoteMap = {}}         

        // hash the quote body        
        let hashQuoteBody = quoteObject.quoteBody;
        let hashedQuote = crypto.createHash('md5').update(hashQuoteBody).digest('hex').toString();

        // check if quote is already in list
        let inList = false;

        for (let key in quoteObject) {
            try {
                if (hashedQuote == this.fullQuoteList[key]) {
                    inList = true;
                }
            } catch {
                // code above will fail if it is not in the list
            }
        }

        // if the key is not already in the list
        if (inList != true) {
            // create a field for it in the list and set it equal to the stringified quote
            this.fullQuoteMap[hashedQuote] = JSON.stringify(quoteObject);
        }
    }
    
    /* 
    initializeQuoteLists() {
        // get the names of all the quoteLists
        const quoteListNames = this.getQuoteListNames();
        
        // create all the quoteLists and append them to the quoteLists field
        for (let quoteListName in quoteListNames) {
            let quoteli = this.createQuoteList(quoteListNames[quoteListName]);
            this.quoteLists.push(quoteli);
        }
    }

    createQuoteList(name, hashes=[]) {
        // create the quotelist object
        let ql = new QuoteList(name, hashes);
        this.quoteLists.push(ql)
        return ql;
    }
    
    // file that reads the quoteList directory and all the files in it
    getQuoteListNames() {
        let dirInfo = readdirSync("./quoteLists/");
        dirInfo.map(item => {item.substring(0, item.indexOf("."))})
        return dirInfo;
    }

    // writes all quoteLists to their respective save files
    writeQuoteLists() {
        for (let quote in this.quoteLists) {
            this.quoteLists[quote].writeToFile();
        }
        
    }
    
    save() {
        this.writeQuoteLists();        
        this.writeQuotes();
    }
    */
